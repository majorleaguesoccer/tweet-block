<?php
/**
 * @file
 * Main module file for Tweet Block module.
 * author: Hans Gutknecht. hans.gutknecht@mlssoccer.com / hansdotcom@gmail.com
 */

/**
 * Implementation of hook_perm().
 *
 */
function tweet_block_perm() {
  return array('create tweet blocks');
}

/**
 * Implementation of hook_menu().
 *
 * Hook menu registers page callbacks with Drupal's central menu system.
 */
function tweet_block_menu() {
  $items = array();

  $items['admin/settings/tweetblock'] = array(
    'title' => 'MLS Tweet Block settings',
    'description' => 'Configuration options for the tweet block module',
    'page callback' => 'tweet_block_admin_settings',
    'access callback' => 'user_access', // TRUE will give access to everyone
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/tweetblock/edit/%'] = array(
    'title' => 'MLS Tweet Feed Edit Block',
    'description' => 'Re-configure existing feed blocks.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tweet_block_edit_form', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/tweetblock/remove/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tweet_block_remove_feed', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Page callback function for admin/settings/tweetblock.
 */
function tweet_block_admin_settings() {
  return drupal_get_form('tweet_block_settings_form');
}

/**
 * Implementation of hook_theme().
 */
function tweet_block_theme() {
  $path = drupal_get_path('module', 'tweet_block');

  return array('tweet_block_single' => array(
        'path' => $path . '/theme',
        'template' => 'tweet_block_single',
        'arguments' => array('tweet_content' => '')
      ),
      'tweet_block_right' => array(
        'path' => $path . '/theme',
        'template' => 'tweet_block_right',
        'arguments' => array('tweet_content' => '')
      ),
      'tweet_block_center' => array(
        'path' => $path . '/theme',
        'template' => 'tweet_block_center',
        'arguments' => array('tweet_content' => '')
      ),
      'tweet_block_right_feed' => array(
        'path' => $path . '/theme',
        'template' => 'tweet_block_right-feed',
        'arguments' => array('content' => '')
      ),
  );
}

/**
 * Form builder function for tweet_block_settings_form.
 */
function tweet_block_settings_form() {
  $form = array();

  $form['tweet_block_1'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tweet Block 1 - Single line display (Custom)'),
    '#description' => t('A single line display block of the specified tweet.'),
  );

  $form['tweet_block_1']['tweet_block_1_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Tweet Block ID - Block 1'),
    '#description' => t('The ID of the tweet for this block, excluding an ID will not generate a block for this tweet block'),
    '#default_value' => variable_get('tweet_id_1', FALSE),
    '#required' => FALSE,
  );

  $form['tweet_block_2'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tweet Block 2 - RIGHT RAIL (Twitter Embed formatting)'),
    '#description' => t('A twitter formatter display block of the specified tweet for the RIGHT RAIL (300px)'),
  );

  $form['tweet_block_2']['tweet_block_2_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Tweet Block ID - Block 2'),
    '#description' => t('The ID of the tweet for this block, excluding an ID will not generate a block for this tweet block'),
    '#default_value' => variable_get('tweet_id_2', FALSE),
    '#required' => FALSE,
  );

  $form['tweet_block_3'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tweet Block 3 - CENTER REGION (Custom)'),
    '#description' => t('A twitter formatter display block of the specified tweet for the CENTER REGION (620px)'),
  );

  $form['tweet_block_3']['tweet_block_3_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Tweet Block ID - Block 3'),
    '#description' => t('The ID of the tweet for this block, excluding an ID will not generate a block for this tweet block'),
    '#default_value' => variable_get('tweet_id_3', FALSE),
    '#required' => FALSE,
  );
  
  $form['tweet_block_4'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tweet Block 4 - RIGHT RAIL (Custom Feed)'),
    '#description' => t('A twitter formatter display block of the specified feed for the RIGHT RAIL (300px)'),
  );
  
  $form['tweet_block_4']['tweet_block_4_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Block Title - Block 4'),
    '#description' => t('Block title to display.'),
    '#default_value' => '',
    '#required' => FALSE,
  );

  $form['tweet_block_4']['tweet_block_4_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Username - Block 4'),
    '#description' => t('The username of the twitter account for this block to display. (Ex: @MLS_Insider)'),
    '#default_value' => '',
    '#required' => FALSE,
  );
  
  $form['tweet_block_4']['tweet_block_4_rm'] = array(
    '#type' => 'textfield',
    '#title' => t('Read More URL - Block 4'),
    '#description' => t('The URL to link to an external read more tweets page. (Include http://)'),
    '#default_value' => '',
    '#required' => FALSE,
  );
  
  $form['submit'] = array(
   '#type' => 'submit',
   '#value' => t('Save settings'),
  );
  
  $form['mls_feed_blocks'] = array(
    '#type' => 'fieldset',
    '#title' => t('Feed Blocks List'),
  );

  $feed_blocks = tweet_block_get_feeds();
  if($feed_blocks) {
    foreach($feed_blocks as $key => $feed_block) {
      $form['mls_feed_blocks']['feed_block_' . $key] = array(
        '#prefix' => '<div>',
        '#value' => '<a href="tweetblock/edit/' . $feed_block['tweet_feed_block_id'] . '">' . t($feed_block['tweet_feed_title'] . ' - ' . $feed_block['tweet_feed_twitter_id']) . '</a> / <a href="tweetblock/remove/' . $feed_block['tweet_feed_block_id'] . '">Remove</a>',
        '#suffix' => '</div>',
      );
    }
  }
  
  return $form;
}

function tweet_block_edit_form() {
  $form = array();
  $id = arg(4);
  $feed_block = tweet_block_get_feed($id);
  $form['tweet_block_edit'] = array(
    '#type' => 'fieldset',
    '#title' => t('Feed Block ' . $id . ' - RIGHT RAIL (Custom Feed)'),
    '#description' => t('A twitter formatter display block of the specified feed for the RIGHT RAIL (300px)'),
  );
  
  $form['tweet_block_edit']['tweet_block_4_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Block Title'),
    '#description' => t('Block title to display.'),
    '#default_value' => $feed_block['tweet_feed_title'],
    '#value' => $feed_block['tweet_feed_title'],
    '#required' => FALSE,
  );

  $form['tweet_block_edit']['tweet_block_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Username'),
    '#description' => t('The username of the twitter account for this block to display. (Ex: @MLS_Insider)'),
    '#default_value' => $feed_block['tweet_feed_twitter_id'],
    '#value' => $feed_block['tweet_feed_twitter_id'],
    '#required' => FALSE,
  );
  
  $form['tweet_block_edit']['tweet_block_rm'] = array(
    '#type' => 'textfield',
    '#title' => t('Read More URL'),
    '#description' => t('The URL to link to an external read more tweets page. (Include http://)'),
    '#default_value' => $feed_block['tweet_feed_read_more_url'],
    '#value' => $feed_block['tweet_feed_read_more_url'],
    '#required' => FALSE,
  );
  
  $form['submit'] = array(
   '#type' => 'submit',
   '#value' => t('Save settings'),
  );
  
  $form['cancel'] = array(
   '#value' => '<a href="/admin/settings/tweetblock">' . t('Cancel') . '</a>',
  );
  
  return $form;
}

/**
 * Validation function for tweet_block_settings_form.
 */
function tweet_block_settings_form_validate(&$form, &$form_state) {
  // Validate
  if (($form_state['values']['tweet_block_1_id'] != '') && !is_numeric($form_state['values']['tweet_block_1_id'])) {
    form_set_error('tweet_block_1_id', t('You must enter a number for the tweet id.'));
  }
  if (($form_state['values']['tweet_block_2_id'] != '') && !is_numeric($form_state['values']['tweet_block_2_id'])) {
    form_set_error('tweet_block_2_id', t('You must enter a number for the tweet id.'));
  }
  if (($form_state['values']['tweet_block_3_id'] != '') && !is_numeric($form_state['values']['tweet_block_3_id'])) {
    form_set_error('tweet_block_3_id', t('You must enter a number for the tweet id.'));
  }
  if (($form_state['values']['tweet_block_4_id'] != '') && ($form_state['values']['tweet_block_4_rm'] == '')) {
    form_set_error('tweet_block_4_rm', t('You must enter a value for the twitter read more link.'));
  }
}

/**
 * Submission function for tweet_block_settings_form.
 */
function tweet_block_settings_form_submit(&$form, &$form_state) {
  // store the ids in variables, mainly so we can revoer the values and place them in the form for defaults
  variable_set('tweet_id_1', $form_state['values']['tweet_block_1_id']);
  variable_set('tweet_id_2', $form_state['values']['tweet_block_2_id']);
  variable_set('tweet_id_3', $form_state['values']['tweet_block_3_id']);
  $i = 1;
  $blocks_built = 0;
  // cycle through the 3 blocks, tbd make this extensible to have more than 3
  while ($i<4) {
    $form_value_id = 'tweet_block_' . $i . '_id';
    if ($form_state['values'][$form_value_id] != "") {
      // ping the twitter api if ID exists
      $block_content = tweet_block_get_tweet($form_state['values'][$form_value_id]);
      // stash ID and html JSON response in the db
      tweet_block_set_tweet_info($i, $form_state['values'][$form_value_id], $block_content);
      $blocks_built++;
    }
    else {
      tweet_block_delete_tweet_info($i);
    }
    $i++;
  }
  drupal_set_message(t('Your tweet block settings have been saved. ' . $blocks_built . ' blocks have been generated and are available through the block system.'));
  
  if($form_state['values']['tweet_block_4_id']) {
    tweet_block_set_feed_info($form_state['values']['tweet_block_4_title'], $form_state['values']['tweet_block_4_id'], $form_state['values']['tweet_block_4_rm']);
  }
}

/**
 * tweet_block_get_tweet ($tweet_id)
 * ping the oEmbed twitter API and grab the html from the JSON response
 */
function tweet_block_get_tweet($tweet_id) {
  // hit the Twitter API
  $tweet_get_url = "https://api.twitter.com/1/statuses/oembed.json?id=" . $tweet_id . "&omit_script=true";
  $tweet_response = drupal_http_request($tweet_get_url, $headers = array(), $method = 'GET', $data = NULL, $retry = 3);
  // Decode it and grab the 3 things I want
  $tweet_json_decoded = json_decode($tweet_response->data, TRUE);
  $tweet_markup = $tweet_json_decoded['html'];
  $tweet_author = $tweet_json_decoded['author_name'];
  $tweet_author_url = $tweet_json_decoded['author_url'];
  // Wrap that into a nice returnable array
  $tweet_content = array($tweet_markup, $tweet_author, $tweet_author_url);
  return $tweet_content;
}

/**
 * Get the info from the db to set and theme the tweet block
 */
function tweet_block_get_tweet_info($block_uid) {
  $result = db_query("SELECT tweet_id, tweet_markup, tweet_author_name, tweet_author_url FROM {tweet_block} WHERE tweet_block_uid = %d", $block_uid);
  return db_fetch_array($result);
}

/**
 * Set the info in the db
 */
function tweet_block_set_tweet_info($block_uid, $tweet_id, $tweet_content) {
  $result = db_query("UPDATE {tweet_block} SET tweet_id = %d, tweet_markup = '%s', tweet_author_name = '%s', tweet_author_url = '%s' WHERE tweet_block_uid = %d", $tweet_id, $tweet_content[0], $tweet_content[1], $tweet_content[2], $block_uid);
  // If no rows were updated, a row doesn't exist yet for this tweet block, let's insert it!
  if (db_affected_rows() == 0) {
    db_query("INSERT INTO {tweet_block} (tweet_block_uid, tweet_id, tweet_markup, tweet_author_name, tweet_author_url) VALUES (%d, %d, '%s', '%s', '%s')", $block_uid, $tweet_id, $tweet_content[0], $tweet_content[1], $tweet_content[2]);
  }
}

/**
 * Delete the tweet block info in the db
 */
function tweet_block_delete_tweet_info($block_uid) {
  $result = db_query("DELETE FROM {tweet_block} WHERE tweet_block_uid = %d", $block_uid);
}

/**
 * Implementation of hook_block().
 * Generate the blocks and output
 */
function tweet_block_block($op = 'list', $delta = 0, $edit = array()) {
  // Base needed for functionality
  drupal_add_css(drupal_get_path('module', 'tweet_block') . '/theme/base.css');
  // Theme feel free to make your own and override
  drupal_add_css(drupal_get_path('module', 'tweet_block') . '/theme/theme.css');
  $blocks = array();
  $feed_blocks = tweet_block_get_feeds();
  switch ($op) {
    case 'list':
      $blocks['tweet_block_1']['info'] = t('Tweet Block 1 - Single line');
      $blocks['tweet_block_2']['info'] = t('Tweet Block 2 - Right Rail (300px)');
      $blocks['tweet_block_3']['info'] = t('Tweet Block 3 - Center Content (620px)');
      if($feed_blocks) {
        foreach($feed_blocks as $key => $feed_block) {
          $blocks['tweet_feed_block_' . $key]['info'] = t('Tweet Feed Block - Right Rail (300px) - @' . $feed_block['tweet_feed_twitter_id']);
        }
      }
    return $blocks;
    case 'view':
    switch($delta) {
      case 'tweet_block_1':
        $block['subject'] = t('<none>');
        $block['content'] = tweet_block_content_1();
        break;
      case 'tweet_block_2':
        $block['subject'] = t('<none>');
        $block['content'] = tweet_block_content_2();
        break;
      case 'tweet_block_3':
        $block['subject'] = t('<none>');
        $block['content'] = tweet_block_content_3();
        break;
    }
    if($feed_blocks) {
      //loop through all the feed block types
      foreach($feed_blocks as $key => $feed_block) {
        switch($delta) {
          case 'tweet_feed_block_' . $key:
            $block['subject'] = t($feed_block['tweet_feed_title']);
            $block['content'] = tweet_block_feed_content($feed_block['tweet_feed_twitter_id'], $feed_block['tweet_feed_read_more_url']);
            break;
        }
      }
    }
    return $block;
  }
}
/**
 * Function to generate the content for block 1 - single
 */
function tweet_block_content_1() {
  $tweet_content = tweet_block_get_tweet_info(1);
  $output = theme('tweet_block_single', $tweet_content);
  return $output;
}

/**
 * Function to generate the content for block 2 - rr
 */
function tweet_block_content_2() {
  $tweet_content = tweet_block_get_tweet_info(2);
  $output = theme('tweet_block_right', $tweet_content);
  return $output;
}

/**
 * Function to generate the content for block 3 - center
 */
function tweet_block_content_3() {
  $tweet_content = tweet_block_get_tweet_info(3);
  $tweet_id = variable_get('tweet_id_3');
  $output = theme('tweet_block_center', $tweet_content);
  return $output;
}

/**
 * Set the info in the db
 */
function tweet_block_set_feed_info($title, $twitter_id, $read_more) {
  $result = db_query("SELECT tweet_feed_twitter_id FROM {tweet_feed_block} WHERE tweet_feed_twitter_id = '" . $twitter_id . "' ");
  if(!db_fetch_array($result)) {
    db_query("INSERT INTO {tweet_feed_block} (tweet_feed_title, tweet_feed_twitter_id, tweet_feed_read_more_url) VALUES ('%s', '%s', '%s')", $title, $twitter_id, $read_more);
    drupal_set_message(t('New feed block saved.'));
  } else {
    drupal_set_message(t('Block with that twitter id already exists.'));
  }
}

/**
 * Get the info from the db
 */
function tweet_block_get_feeds() {
  $return = '';
  $result = db_query("SELECT * FROM {tweet_feed_block}");
  while($r = db_fetch_array($result)) {
    $return[] = $r;
  }
  return $return;
}

/**
 * Get the info from the db
 */
function tweet_block_get_feed($id) {
  $result = db_query("SELECT * FROM {tweet_feed_block} WHERE tweet_feed_block_id='%d'", $id);
  return  db_fetch_array($result);
}

/**
 * Delete the tweet block info in the db
 */
function tweet_block_remove_feed() {
  $id = arg(4);
  $result = db_query("DELETE FROM {tweet_feed_block} WHERE tweet_feed_block_id = %d", $id);
  drupal_goto('admin/settings/tweetblock');
  drupal_set_message(t('Block removed.'));
}

/**
 * Submission function for tweet_block_settings_form.
 */
function tweet_block_edit_form_submit(&$form, &$form_state) {
  db_query("UPDATE {tweet_feed_block} SET tweet_feed_title = '%s', tweet_feed_twitter_id = '%s', tweet_feed_read_more_url = '%s' WHERE tweet_feed_block_id = '%d'", $form_state['clicked_button']['#post']['tweet_block_4_title'], $form_state['clicked_button']['#post']['tweet_block_id'], $form_state['clicked_button']['#post']['tweet_block_rm'], arg(4));
  drupal_goto('admin/settings/tweetblock');
  drupal_set_message(t('Feed block saved.'));
}

/**
 * Function to generate the content for block - rr feed
 */
function tweet_block_feed_content($twitter_id, $read_more) {
  $content = array(
    'username' => $twitter_id,
    'read_more' => $read_more,
  );
  $output = theme('tweet_block_right_feed', $content);
  return $output;
}
